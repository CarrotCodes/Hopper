/*
 * This file is generated by jOOQ.
*/
package chat.willow.hopper.generated.tables;


import chat.willow.hopper.generated.DefaultSchema;
import chat.willow.hopper.generated.Keys;
import chat.willow.hopper.generated.tables.records.LoginsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Logins extends TableImpl<LoginsRecord> {

    private static final long serialVersionUID = 185839709;

    /**
     * The reference instance of <code>Logins</code>
     */
    public static final Logins LOGINS = new Logins();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LoginsRecord> getRecordType() {
        return LoginsRecord.class;
    }

    /**
     * The column <code>Logins.id</code>.
     */
    public final TableField<LoginsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Logins.userid</code>.
     */
    public final TableField<LoginsRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>Logins.username</code>.
     */
    public final TableField<LoginsRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>Logins.password</code>.
     */
    public final TableField<LoginsRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>Logins</code> table reference
     */
    public Logins() {
        this("Logins", null);
    }

    /**
     * Create an aliased <code>Logins</code> table reference
     */
    public Logins(String alias) {
        this(alias, LOGINS);
    }

    private Logins(String alias, Table<LoginsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Logins(String alias, Table<LoginsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LoginsRecord> getPrimaryKey() {
        return Keys.PK_LOGINS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LoginsRecord>> getKeys() {
        return Arrays.<UniqueKey<LoginsRecord>>asList(Keys.PK_LOGINS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Logins as(String alias) {
        return new Logins(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Logins rename(String name) {
        return new Logins(name, null);
    }
}
