/*
 * This file is generated by jOOQ.
*/
package chat.willow.hopper.generated.tables;


import chat.willow.hopper.generated.DefaultSchema;
import chat.willow.hopper.generated.Keys;
import chat.willow.hopper.generated.tables.records.SessionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sessions extends TableImpl<SessionsRecord> {

    private static final long serialVersionUID = -835775027;

    /**
     * The reference instance of <code>Sessions</code>
     */
    public static final Sessions SESSIONS = new Sessions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionsRecord> getRecordType() {
        return SessionsRecord.class;
    }

    /**
     * The column <code>Sessions.id</code>.
     */
    public final TableField<SessionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Sessions.userid</code>.
     */
    public final TableField<SessionsRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>Sessions.token</code>.
     */
    public final TableField<SessionsRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * Create a <code>Sessions</code> table reference
     */
    public Sessions() {
        this("Sessions", null);
    }

    /**
     * Create an aliased <code>Sessions</code> table reference
     */
    public Sessions(String alias) {
        this(alias, SESSIONS);
    }

    private Sessions(String alias, Table<SessionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sessions(String alias, Table<SessionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SessionsRecord> getPrimaryKey() {
        return Keys.PK_SESSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SessionsRecord>> getKeys() {
        return Arrays.<UniqueKey<SessionsRecord>>asList(Keys.PK_SESSIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Sessions as(String alias) {
        return new Sessions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessions rename(String name) {
        return new Sessions(name, null);
    }
}
